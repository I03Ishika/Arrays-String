// class Solution {
//     public int maxProfit(int[] prices) {
//         int min = prices[0];
//         int max = prices[0];
//         int n=0;
//         for(int i=0; i<prices.length; i++){
//             if(prices[i] < min){
//                 min = prices[i];
//                 n = i;
//             }
//         }
//         if(min == prices[prices.length-1]){
//             return 0;
//         }else{
//             int m=0;
//             for(m=n+1; m<prices.length-1; m++){
//                 if(max < prices[m]){
//                     max = prices[m];
//                 }
//             }
//         }
//         return max-min;
//     }
// }

class Solution {
    public int maxProfit(int[] prices) {
        int min = prices[0];
        int maxProfit = 0;

        for (int i = 1; i < prices.length; i++) {
            if (prices[i] < min) {
                min = prices[i];
            } else {
                int currentProfit = prices[i] - min;
                if (currentProfit > maxProfit) {
                    maxProfit = currentProfit;
                }
            }
        }

        return maxProfit;
    }
}
